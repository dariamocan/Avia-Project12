* {
  margin: 0;
  padding: 0;
}

body {
  width: 100%;
  height: 100%;
 
}
.home {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.home--main h1 {
  color: white;
  font-size: 3rem;
}

.container {
  width: 100%;
  height: 100%;
  // overflow: hidden;
  position: relative;
}

.background {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  object-fit: cover;
  width: 100%;
  height: 100%;

  mask-image: radial-gradient(
    white 0%,
    white 30%,
    transparent 80%,
    transparent
  );

}

.circle-container {
  $particleNum: 200;
  $particleColor: hsl(180, 100%, 80%);

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .circle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(
      hsl(180, 100%, 80%),
      hsl(180, 100%, 80%) 10%,
      hsla(180, 100%, 80%, 0) 56%
    );

    animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  $particleBaseSize: 8;

  
  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      $circleSize: random($particleBaseSize);
      width: $circleSize + px;
      height: $circleSize + px;

      $startPositionY: random(10) + 100;
      $framesName: "move-frames-" + $i;
      $moveDuration: 28000 + random(9000) + ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(37000) + ms;

      @keyframes #{$framesName} {
        from {
          transform: translate3d(
            #{random(100) + vw},
            #{$startPositionY + vh},
            0
          );
        }

        to {
          transform: translate3d(
            #{random(100) + vw},
            #{- $startPositionY - random(30) + vh},
            0
          );
        }
      }

      .circle {
        animation-delay: random(4000) + ms;
      }
    }
  }
}

.message {
  position: absolute;
  right: 20px;
  bottom: 10px;
  color: white;
  font-family: "Josefin Slab", serif;
  line-height: 27px;
  font-size: 18px;
  text-align: right;
  pointer-events: none;
  animation: message-frames 1.5s ease 5s forwards;
  opacity: 0;
  
  @keyframes message-frames {
    from {
      opacity: 0;
    }
    
    to {
      opacity: 1;
    }
  }
}


.home--main {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 10vh;
  gap: 20px;
  
}

.home--main .title {
  font-size: 16rem;
  text-shadow: 10px 15px 5px rgba(255,255,255,0.4);
  
}

.home--main .description {
  max-width: 1000px;
  color: rgba(255,255,255,0.6);
  font-size: 1.5rem;
}

.home--main .text-link {
  color: black;
}
.home--main .get--started {
             
  background: rgba(255,198,0,1);
  margin: 10px;
  padding: 15px 45px;
  text-align: center;
  transition: all 0.3s ease-in-out;
  background-size: 200% auto;
  color: black;            
  border-radius: 10px;
  display: block;
  border: none;
  font-size: 1.2rem;
}
.home--main .get--started:hover {

  box-shadow: 0 0 20px #eee;
  filter: brightness(1.2);
  font-size: 1.3rem;
  cursor: pointer;
}

.home--main .get--started:active {
   background-color: rgba(255,198,0,0.5);
    filter: brightness(1);
    box-shadow: none;
}