{"ast":null,"code":"var _jsxFileName = \"E:\\\\Front End\\\\React\\\\Aiva Project\\\\aiva-project\\\\src\\\\Components\\\\Profile\\\\Post\\\\CreatePost.tsx\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport ReactImagePickerEditor from 'react-image-picker-editor';\nimport 'react-image-picker-editor/dist/index.css';\nimport Discard from './Discard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePost(props) {\n  _s();\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const [discard, setDiscard] = useState(false);\n  const [photoSelected, setPhotoSelected] = useState(false);\n  const config = {\n    borderRadius: '8px',\n    language: 'en',\n    width: '500px',\n    height: '500px',\n    objectFit: 'contain',\n    compressInitial: null,\n    hideDownloadBtn: true,\n    hideAddBtn: true\n  };\n  const toggleDiscard = () => {\n    setDiscard(prevDiscard => !prevDiscard);\n  };\n  const initialImage = \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-post\",\n      tabIndex: 0,\n      onKeyDown: event => event.key === 'Escape' ? imageSrc ? setDiscard(true) : props.togglePost() : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames('upload-photo', {\n          'photo-selected': photoSelected\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"close close-white\",\n            onClick: () => imageSrc ? setDiscard(true) : props.togglePost(),\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create new post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), !photoSelected && /*#__PURE__*/_jsxDEV(ReactImagePickerEditor, {\n            imageSrcProp: initialImage,\n            config: config,\n            imageChanged: newDataUri => {\n              setImageSrc(newDataUri);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 32\n          }, this), photoSelected && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageSrc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), discard && /*#__PURE__*/_jsxDEV(Discard, {\n            togglePost: props.togglePost,\n            discard: discard,\n            toggleDiscard: toggleDiscard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), !photoSelected && imageSrc && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"select-photo\",\n            onClick: () => setPhotoSelected(true),\n            children: \"Select photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), photoSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Tell me if it works\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"black-screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CreatePost, \"8g7GYHVMKWCQ+fWoAUNlt137wXg=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["classNames","React","useState","ReactImagePickerEditor","Discard","CreatePost","props","imageSrc","setImageSrc","discard","setDiscard","photoSelected","setPhotoSelected","config","borderRadius","language","width","height","objectFit","compressInitial","hideDownloadBtn","hideAddBtn","toggleDiscard","prevDiscard","initialImage","event","key","togglePost","newDataUri"],"sources":["E:/Front End/React/Aiva Project/aiva-project/src/Components/Profile/Post/CreatePost.tsx"],"sourcesContent":["\r\nimport classNames from 'classnames';\r\nimport React, { useState } from 'react'\r\nimport ReactImagePickerEditor, { ImagePickerConf } from 'react-image-picker-editor';\r\nimport 'react-image-picker-editor/dist/index.css'\r\nimport Discard from './Discard';\r\n\r\n\r\nexport default function CreatePost(props) {\r\n\r\n  const [imageSrc,setImageSrc] = useState(\"\")\r\n  const [discard,setDiscard] = useState(false)\r\n  const [photoSelected,setPhotoSelected] = useState(false)\r\n\r\n  const config: ImagePickerConf = {\r\n    borderRadius : '8px',\r\n    language : 'en',\r\n    width : '500px',\r\n    height: '500px',\r\n    objectFit: 'contain',\r\n    compressInitial: null,\r\n    hideDownloadBtn: true,\r\n    hideAddBtn: true,\r\n    \r\n  }\r\n\r\n  const toggleDiscard = () => {\r\n    setDiscard(prevDiscard => !prevDiscard)\r\n  }\r\n  const initialImage = \"\"\r\n\r\n  return (\r\n    <>\r\n      \r\n      <div className='create-post' tabIndex={0} onKeyDown = {(event) => event.key === 'Escape' ? imageSrc ? setDiscard(true) : props.togglePost() : \"\"}>\r\n        <div className={classNames('upload-photo',{'photo-selected':photoSelected})}>\r\n          <div className='upload-main'>\r\n            <button type = 'button' className='close close-white' onClick={() => imageSrc ? setDiscard(true) : props.togglePost() }>âœ–</button>\r\n            <h3>Create new post</h3>\r\n            {!photoSelected && < ReactImagePickerEditor\r\n              imageSrcProp={initialImage}\r\n              config={config}\r\n              imageChanged={(newDataUri: any) => { setImageSrc(newDataUri) }} \r\n            /> }\r\n            {photoSelected &&\r\n              <img src = {imageSrc}/> \r\n            }\r\n            {discard && <Discard\r\n              togglePost = {props.togglePost}\r\n              discard = {discard} \r\n              toggleDiscard = {toggleDiscard}\r\n            />}\r\n            {!photoSelected && imageSrc && <button className='select-photo' onClick={() => setPhotoSelected(true)}>Select photo</button> }\r\n          </div>\r\n          {photoSelected && <div>\r\n            <h1>Tell me if it works</h1>\r\n          </div> }\r\n        </div>\r\n        <div className='black-screen'></div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}