{"ast":null,"code":"var _jsxFileName = \"E:\\\\Front End\\\\React\\\\aiva-project\\\\src\\\\Components\\\\Create Account\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    mobilePhone: ''\n  });\n  const [showPassword, setShowPassword] = useState(true);\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    //   if(handleValidity())\n    //       setActivateButton(true)\n    //   else\n    //       setActivateButton(false)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"username\",\n      placeholder: \"Username\",\n      name: \"username\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      type: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password--container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"password\",\n        className: classNames('password', {\n          'empty': !formData.password.length\n        }),\n        type: showPassword ? 'password' : 'text',\n        required: true,\n        minLength: 8,\n        placeholder: \"Password\",\n        value: formData.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this), formData.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show--container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleShowPassword,\n          type: \"button\",\n          className: classNames('show', {\n            'show--on': showPassword\n          }),\n          children: showPassword ? 'Show' : 'Hide'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"confirmPassword\",\n      placeholder: \"Password\",\n      name: \"email\",\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"Df6TqPD0TinyFmpgbzoMNvz9/MM=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","classNames","Form","formData","setFormData","username","email","password","confirmPassword","mobilePhone","showPassword","setShowPassword","handleChange","event","name","value","target","prevState","length","toggleShowPassword"],"sources":["E:/Front End/React/aiva-project/src/Components/Create Account/Form.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport classNames from 'classnames'\r\nexport default function Form() {\r\n\r\n  const [formData,setFormData] = useState({\r\n    username:'',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:'',\r\n    mobilePhone:''\r\n  })\r\n\r\n  const [showPassword,setShowPassword] = useState(true)\r\n\r\n  function handleChange (event) {\r\n      \r\n      const {name,value} = event.target\r\n      setFormData(prevState => ({\r\n          ...prevState,\r\n          [name]:value\r\n      }))\r\n    //   if(handleValidity())\r\n    //       setActivateButton(true)\r\n    //   else\r\n    //       setActivateButton(false)\r\n  }\r\n  return (\r\n    <form>\r\n        <input\r\n            id = 'username'\r\n            placeholder='Username'\r\n            name='username'\r\n            type='text'\r\n        \r\n        />\r\n        <input \r\n            id='email'\r\n            placeholder='Email'\r\n            name='email'\r\n            type='email'\r\n        />\r\n       <div className='password--container'>\r\n             <input \r\n                onChange = {handleChange}\r\n                name = \"password\"\r\n                className = {classNames('password',{'empty':!formData.password.length})}\r\n                type = {showPassword ? 'password' : 'text'}\r\n                required\r\n                minLength={8}\r\n                placeholder = \"Password\"\r\n                value = {formData.password}\r\n            />\r\n            {formData.password && <div className='show--container'>\r\n                <button \r\n                    onClick = {toggleShowPassword} \r\n                    type = 'button' \r\n                    className={classNames('show',{'show--on':showPassword})}\r\n                >\r\n                    {showPassword ? 'Show' : 'Hide'}\r\n                </button>\r\n            </div>}\r\n        </div>\r\n        <input \r\n            id='confirmPassword'\r\n            placeholder='Password'\r\n            name='email'\r\n            type='password'\r\n        />\r\n\r\n        \r\n\r\n    </form>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,UAAU,MAAM,YAAY;AAAA;AACnC,eAAe,SAASC,IAAI,GAAG;EAAA;EAE7B,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IACtCK,QAAQ,EAAC,EAAE;IACXC,KAAK,EAAC,EAAE;IACRC,QAAQ,EAAC,EAAE;IACXC,eAAe,EAAC,EAAE;IAClBC,WAAW,EAAC;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAErD,SAASY,YAAY,CAAEC,KAAK,EAAE;IAE1B,MAAM;MAACC,IAAI;MAACC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IACjCZ,WAAW,CAACa,SAAS,KAAK;MACtB,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAEC;IACX,CAAC,CAAC,CAAC;IACL;IACA;IACA;IACA;EACF;;EACA,oBACE;IAAA,wBACI;MACI,EAAE,EAAG,UAAU;MACf,WAAW,EAAC,UAAU;MACtB,IAAI,EAAC,UAAU;MACf,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAEb,eACF;MACI,EAAE,EAAC,OAAO;MACV,WAAW,EAAC,OAAO;MACnB,IAAI,EAAC,OAAO;MACZ,IAAI,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QACd,eACH;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAC9B;QACG,QAAQ,EAAIH,YAAa;QACzB,IAAI,EAAG,UAAU;QACjB,SAAS,EAAIX,UAAU,CAAC,UAAU,EAAC;UAAC,OAAO,EAAC,CAACE,QAAQ,CAACI,QAAQ,CAACW;QAAM,CAAC,CAAE;QACxE,IAAI,EAAIR,YAAY,GAAG,UAAU,GAAG,MAAO;QAC3C,QAAQ;QACR,SAAS,EAAE,CAAE;QACb,WAAW,EAAG,UAAU;QACxB,KAAK,EAAIP,QAAQ,CAACI;MAAS;QAAA;QAAA;QAAA;MAAA,QAC7B,EACDJ,QAAQ,CAACI,QAAQ,iBAAI;QAAK,SAAS,EAAC,iBAAiB;QAAA,uBAClD;UACI,OAAO,EAAIY,kBAAmB;UAC9B,IAAI,EAAG,QAAQ;UACf,SAAS,EAAElB,UAAU,CAAC,MAAM,EAAC;YAAC,UAAU,EAACS;UAAY,CAAC,CAAE;UAAA,UAEvDA,YAAY,GAAG,MAAM,GAAG;QAAM;UAAA;UAAA;UAAA;QAAA;MAC1B;QAAA;QAAA;QAAA;MAAA,QACP;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MACI,EAAE,EAAC,iBAAiB;MACpB,WAAW,EAAC,UAAU;MACtB,IAAI,EAAC,OAAO;MACZ,IAAI,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QACjB;EAAA;IAAA;IAAA;IAAA;EAAA,QAIC;AAEX;AAAC,GAvEuBR,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}